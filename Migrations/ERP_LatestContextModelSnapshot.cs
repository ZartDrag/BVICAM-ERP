// <auto-generated />
using System;
using ERP_Latest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ERP_Latest.Migrations
{
    [DbContext(typeof(ERP_LatestContext))]
    partial class ERP_LatestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ERP_Latest.Models.Attendance", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsPresent")
                        .HasColumnType("bit");

                    b.HasKey("StudentId", "CourseId", "Date");

                    b.HasIndex("CourseId");

                    b.ToTable("Attendance");
                });

            modelBuilder.Entity("ERP_Latest.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"), 1L, 1);

                    b.Property<string>("CourseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SemesterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CourseId");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("ERP_Latest.Models.Student_Basics", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"), 1L, 1);

                    b.Property<string>("CetNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CetType")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EnrollNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("IsVerified")
                        .HasColumnType("tinyint");

                    b.Property<byte>("IsWithdraw")
                        .HasColumnType("tinyint");

                    b.Property<string>("StudentEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentMobile")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WithdrawDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WithdrawReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentId");

                    b.ToTable("Student_Basics");
                });

            modelBuilder.Entity("ERP_Latest.Models.Student_Details", b =>
                {
                    b.Property<int>("StudentDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentDetailId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("MentorId")
                        .HasColumnType("int");

                    b.Property<string>("StudentAlternateEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("StudentAlternateMobile")
                        .HasColumnType("bigint");

                    b.Property<int>("StudentBatch")
                        .HasColumnType("int");

                    b.Property<string>("StudentBloodGroup")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentCategory")
                        .HasColumnType("int");

                    b.Property<int>("StudentCetRank")
                        .HasColumnType("int");

                    b.Property<int?>("StudentCetType")
                        .HasColumnType("int");

                    b.Property<int>("StudentCommunity")
                        .HasColumnType("int");

                    b.Property<string>("StudentCurrentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StudentDob")
                        .HasColumnType("datetime2");

                    b.Property<long>("StudentFatherMobile")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentFatherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentGender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<bool?>("StudentIsMgmt")
                        .HasColumnType("bit");

                    b.Property<bool?>("StudentIsOutDelhi")
                        .HasColumnType("bit");

                    b.Property<long>("StudentMotherMobile")
                        .HasColumnType("bigint");

                    b.Property<string>("StudentMotherName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPermanentAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StudentPhoto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StudentPreviousSchoolDetails")
                        .HasColumnType("int");

                    b.Property<int>("StudentProgramme")
                        .HasColumnType("int");

                    b.Property<int?>("StudentShift")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("StudentDetailId");

                    b.ToTable("Student_Details");
                });

            modelBuilder.Entity("ERP_Latest.Models.Attendance", b =>
                {
                    b.HasOne("ERP_Latest.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ERP_Latest.Models.Student_Basics", "Student_Basics")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student_Basics");
                });
#pragma warning restore 612, 618
        }
    }
}
